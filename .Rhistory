library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpI2.RData")
source('~/oyd/oydapp/R/srvHelper.R')
charToRaw(keyStr)
str2raw(sodium::sha256(charToRaw(keyStr)))
sodium::sha256(charToRaw(keyStr))
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpKI2.RData")
load("~/oyd/sample/tmpKl1.RData")
View(allItems)
allItems
keyStr <- 'geheim'
keyStr <- 'geheim'
privateKey <- sodium::sha256(charToRaw(keyStr))
keyRecord <- data.frame(
title = 'Datentresor',
repo = 'eu.ownyourdata',
key = raw2str(sodium::sha256(
charToRaw(password))),
read = TRUE, stringsAsFactors = FALSE)
keyRecord <- data.frame(
title = 'Datentresor',
repo = 'eu.ownyourdata',
key = raw2str(sodium::sha256(
charToRaw(keyStr))),
read = TRUE, stringsAsFactors = FALSE)
library(oydapp)
source('~/oyd/oydapp/R/srvHelper.R')
keyRecord <- data.frame(
title = 'Datentresor',
repo = 'eu.ownyourdata',
key = raw2str(sodium::sha256(
charToRaw(keyStr))),
read = TRUE, stringsAsFactors = FALSE)
View(keyRecord)
library(oydapp)
load("~/oyd/sample/tmpInv0.RData")
newItem
as.data.frame(newItem)
z <- as.data.frame(newItem)
z <- as.data.frame(t(newItem))
z
z$title
z <- as.data.frame(t(newItem), stringsAsFactors = FALSE)
z$title
z$repo
z$key
library(oydapp)
load("~/oyd/sample/tmpKl2.RData")
allItems
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
keyStr <- 'test'
charToRaw(keyStr)
sodium::sha256(
charToRaw(keyStr))
source('~/oyd/oydapp/R/srvHelper.R')
raw2str(sodium::sha256(
charToRaw(keyStr)))
library(oydapp)
load("~/oyd/sample/tmpReadSimple.RData")
source('~/oyd/oydapp/R/srvHelper.R')
app_id <- 'eu.ownyourdata.sample'
appRepoDefault <- app_id
checkValidKey(app, appRepoDefault, privateKey)
keyRecord <- data.frame(
title = 'Datentresor',
repo = 'eu.ownyourdata',
key = raw2str(sodium::sha256(
charToRaw(keyStr))),
read = TRUE, stringsAsFactors = FALSE)
keyRecord
library(oydapp)
load("~/oyd/sample/tmpReadSimpleError.RData")
source('~/oyd/oydapp/R/srvHelper.R')
checkValidKey(app, appRepoDefault, privateKey)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpReadSimpleError.RData")
repo <- appRepoDefault
checkRow <- 1
validKey <- TRUE
source('~/oyd/oydapp/R/srvBase.R')
url <- itemsUrl(app$url, appRepoDefault)
data <- readRawItems(app, url)
View(data)
data0 <- data[checkRow, ]
authKey <- sodium::pubkey(sodium::sha256(charToRaw('auth')))
decryptError <- FALSE
cipher <- str2raw(as.character(data0$value))
nonce <- str2raw(as.character(data0$nonce))
rawToChar(sodium::auth_decrypt(cipher,
privateKey,
authKey,
nonce))
value <- tryCatch(
rawToChar(sodium::auth_decrypt(cipher,
privateKey,
authKey,
nonce)),
error = function(e) {
validKey <<- FALSE
return(NA) })
validKey
library(oydapp)
as.character(TRUE)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpAllCvk.RData")
rawToChar(sodium::auth_decrypt(cipher,
privateKey,
authKey,
nonce))
data0$value
data0$nonce
privateKey
authKey
sodium::auth_decrypt(cipher,
privateKey,
authKey,
nonce)
sodium::auth_decrypt(cipher,
privateKey,
authKey,
nonce)
cipher
privateKey
authKey
nonce
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
?shiny::isolate
library(oydapp)
library(oydapp)
library(oydapp)
raw(0)
library(oydapp)
load("~/oyd/sample/tmpOD.RData")
length(privateKey) == 1
anyNA(data$nonce)
load("~/oyd/sample/tmpCVK.RData")
source('~/oyd/oydapp/R/srvHelper.R')
str2raw(as.character(data0$value))
source('~/oyd/oydapp/R/srvHelper.R')
str2raw(as.character(data0$value))
cipher <- str2raw(as.character(data0$value))
nonce <- str2raw(as.character(data0$nonce))
value <- tryCatch(
rawToChar(sodium::auth_decrypt(cipher,
privateKey,
authKey,
nonce)),
error = function(e) {
validKey <<- FALSE
return(NA) })
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
?shiny::tags
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
a <- list(a=1, b=2)
z <- list(c=3)
b <- merge(a,z)
b
header <- list()
length(header)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpWrite12.RData")
addFields
item
load("~/oyd/sample/tmpWrite0.RData")
?shiny::modalDialog
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpWD.RData")
str(ns)
View(items)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpDialogWrite.RData")
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpI0.RData")
data
app$encryption
load("~/oyd/sample/tmpI0.RData")
app$encryption
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpKTO.RData")
keyTypeOptions
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
source('~/oyd/oydapp/R/srvHelper.R')
key <- '9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08'
str2raw(key)
sodium::pubkey(str2raw(my_key))
sodium::pubkey(str2raw(key))
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpKI.RData")
keyItems
my_key <- keyItems[1, 'key']
sodium::pubkey(str2raw(my_key))
backup <- keyItems
keyItems[1, 'key']
keyItems[1, 'key'] <- raw2str(sodium::pubkey(str2raw(my_key)))
keyItems[1, 'key']
str2raw("affe")
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
?tr
??tr
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(shiny); runApp('~/cs/ownyourdata/shiny-samples/langModule.R')
runApp('~/cs/ownyourdata/shiny-samples/langModule.R')
runApp('~/cs/ownyourdata/shiny-samples/langModule.R')
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpI0.RData")
tr
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpI1.RData")
library(oydapp)
load("~/oyd/sample/tmpI1.RData")
str(tr)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/sample/tmpAllLoc.RData")
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/app-note/tmpNoteUpdate.RData")
repo_url <- urlitem
repo_url <- url
item
id <- currNote$id
addFields <- list(created_at = as.character(currNote$created_at))
message <- jsonlite::toJSON(item, auto_unbox = TRUE)
value <- message
nonce <- ''
oyd_item <- list(
value      = value,
version    = oydDataVersion
)
oyd_item
oyd_item <- list(
value      = value,
version    = oydDataVersion
)
oyd_item
load("~/oyd/app-note/tmpNoteUpdate.RData")
repo_url <- url
id <- currNote$id
addFields = list(created_at = as.character(currNote$created_at))
message <- jsonlite::toJSON(item, auto_unbox = TRUE)
value <- message
nonce <- ''
oyd_item <- list(
value      = value,
version    = oydDataVersion
)
oydDataVersion <- '0.4'
oyd_item <- list(
value      = value,
version    = oydDataVersion
)
nzchar(nonce)
if(length(addFields) > 0){
oyd_item <- merge(oyd_item, addFields)
}
oyd_item
c(created_at = getTsNow())
getTsNow <- function(){
DateTime2iso8601(Sys.time())
}
c(created_at = getTsNow())
DateTime2iso8601 <- function(now){
strftime(as.POSIXlt(now,
'UTC',
'%Y-%m-%dT%H:%M:%S'),
oydTimeFormat)
}
source('~/oyd/oydapp/R/general.R')
source('~/oyd/oydapp/R/srvHelper.R')
c(created_at = getTsNow())
c(oyd_item, c(created_at = getTsNow()))
missing(id)
oyd_item <- c(oyd_item, c(id = as.numeric(id),
# created_at = items[items$id == id,
#                    'created_at'],
update_at = getTsNow()))
oyd_item
if(length(addFields) > 0){
oyd_item <- merge(oyd_item, addFields)
}
length(addFields) > 0
addFields
oyd_item
merge(oyd_item, addFields)
oyd_item
str(oyd_item)
str(addFields)
merge(oyd_item, addFields)
c(oyd_item, addFields)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
library(oydapp)
load("~/oyd/app-note/tmpAN.RData")
allNotes
library(shiny); install.packages('~/oyd/oydapp/', repos=NULL, type='source'); library(oydapp); runApp('~/oyd/app-note', host='0.0.0.0', port=1251)
